{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","App.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","href","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","isLoaded","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","creatProject","authorId","add","Date","CreateProject","createProject","history","push","App","exact","path","component","ProjectDetails","SignUp","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","analytics","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","useattachAuthIsReady","reduxFirestore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b18574a4.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions'\n\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/create'>New Project</NavLink></li>\n            <li><a onClick={props.signOut} href=\"/\">Log Out</a></li>\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'>{props.profile.initials}</NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' });\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err });\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\n        });\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).catch(err => {\n            dispatch({ type: 'SIGNUP_ERROR', err })\n        })\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n\nexport default function SignedOutLinks() {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/signup'>Signup</NavLink></li>\n            <li><NavLink to='/signin'>Login</NavLink></li>\n        </ul>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport { connect } from \"react-redux\";\n\nconst Navbar = ({ auth, profile }) => {\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\">MuziPlan</Link>\n                {auth.isLoaded && links}\n            </div>\n        </nav>\n    )\n}\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\nexport default connect(mapStateToProps)(Navbar)","import React from 'react';\nimport moment from 'moment'\n\nexport default function Notifications({ notifications }) {\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        {notifications && notifications.map(notification => {\n                            return (\n                                <li key={notification.id}>\n                                    <span className=\"pink-text\">{`${notification.user}  `}</span>\n                                    <span>{notification.content}</span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(notification.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport moment from 'moment'\n\nfunction ProjectSummary({ project }) {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">\n                    {project.title}\n                </span>\n                <p>{`Posted by ${project.authorFirstName} ${project.authorLastName}`}</p>\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary\n","import { connect } from \"react-redux\";\nimport React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Redirect } from 'react-router-dom';\nimport { Link } from \"react-router-dom\";\n\nconst ProjectList = ({ projects, auth }) => {\n    \n    if (!auth.uid) return <Redirect to='/signin' />\n    return (\n        <div className=\"project-list section\">\n            {projects && projects.map(project => {\n                return (\n                    <Link to={`/project/${project.id}`} key={project.id}>\n                        <ProjectSummary key={project.id} project={project} />\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(ProjectList)","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nexport class Dashboard extends Component {\n    render() {\n        const { projects, auth, notifications } = this.props;\n        console.log(notifications);\n\n        if (!auth.uid) return <Redirect to='/signin' />\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects} />\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\n// use compose to chain two hihger order components together \nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\n    ])\n)(Dashboard)\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { Redirect } from 'react-router-dom';\nimport { compose } from 'redux';\nimport moment from 'moment'\n\nconst ProjectDetails = (props) => {\n    // const { id } = props.match.params;\n    const { project, auth } = props\n    if (!auth.uid) return <Redirect to='/signin' />\n    if (project) {\n        return (\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">{project.title}</span>\n                        <p>{project.content}</p>\n                    </div>\n                    <div className=\"card-action-gret lighten-4 grey-text\">\n                        <div>{`Posted by ${project.authorFirstName} ${project.authorLastName}`}</div>\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\n                    </div>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"container center\">\n                <p>Loading project...</p>\n            </div>\n        )\n\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const { id } = ownProps.match.params;\n    const { projects } = state.firestore.data;\n    const project = projects ? projects[id] : null\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects' }\n    ])\n)(ProjectDetails)\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\nexport class SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state)\n    }\n    render() {\n        const { authError, auth } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-next text-darken-3\">Sign in</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 s-depth-0\">Login</button>\n                        <div className=\"rd-text center\">\n                            {authError ? <p>{authError}</p> : null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport { signUp } from '../../store/actions/authActions';\n\nexport class SignIn extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state)\n    }\n    render() {\n        const { auth, authError } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-next text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n                    </div>\n                    {/* <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"text\" id=\"password\" onChange={this.handleChange} />\n                    </div> */}\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 s-depth-0\">Sign up</button>\n                        <div className=\"red-text center\">\n                            {authError ? <p>{authError}</p> : null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","const creatProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        // make an async call\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        console.log(profile);\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({\n                type: 'CREATE_PROJECT',\n                project\n            })\n        }).catch((err) => {\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err });\n        })\n\n    }\n}\n\nexport default creatProject","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport createProject from \"../../store/actions/projectActions\";\nimport { Redirect } from 'react-router-dom';\nexport class CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createProject(this.state);\n        this.props.history.push('/');\n    }\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-next text-darken-3\">Create Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 s-depth-0\">Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar/>\n        <Switch>\n          <Route exact path='/' component={Dashboard}/>\n          <Route path='/project/:id' component={ProjectDetails}/>\n          <Route path='/signin' component={SignIn}/>\n          <Route path='/signup' component={SignUp}/>\n          <Route path='/create' component={CreateProject}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const initState = {\n    authError: null\n};\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            console.log('login error');\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n\n        case 'LOGIN_SUCCESS':\n            console.log('login successful');\n            return {\n                ...state,\n                authError: null\n            }\n\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success');\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error');\n            return {\n                ...state,\n                authError: action.err.message\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default authReducer;","const initState = {\n    projects: [\n        { id: '1', title: 'help me find peach', content: 'blah blah blah' },\n        { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\n        { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' }\n    ]\n};\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('created project error', action.err);\n            return state\n        default:\n            return state\n    }\n}\n\nexport default projectReducer;\n","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,  /* sync firetore into our app state */\n    firebase: firebaseReducer\n})\n\n\nexport default rootReducer;","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/analytics'\nimport 'firebase/auth'\nconst firebaseConfig = {\n    apiKey: \"AIzaSyB5OyET0fU_aV3ShtyYGIn0KQBBzGof4KQ\",\n    authDomain: \"muzi-marioplan.firebaseapp.com\",\n    databaseURL: \"https://muzi-marioplan.firebaseio.com\",\n    projectId: \"muzi-marioplan\",\n    storageBucket: \"muzi-marioplan.appspot.com\",\n    messagingSenderId: \"335403920312\",\n    appId: \"1:335403920312:web:c4887dd0acaaab99557d4d\",\n    measurementId: \"G-TVB4DFBH9D\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().settings({timestampsInSnapshots: true})\nfirebase.analytics();\nfirebase.firestore();\n\nexport default firebase;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', useattachAuthIsReady: true }), // redux binding for firebase\n    reduxFirestore(fbConfig) // redux bindings for firestore\n  )\n);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n// import { createStore, applyMiddleware, compose } from 'redux'\n// import rootReducer from \"./store/reducers/rootReducer\";\n// import { Provider } from \"react-redux\";\n// import thunk from 'redux-thunk';\n\n\n// import { reduxFirestore, createFirestoreInstance, getFirestore }\n//   from 'redux-firestore'\n\n\n// import { ReactReduxFirebaseProvider, getFirebase }\n//   from 'react-redux-firebase'\n\n\n// import fbConfig from \"./config/fbConfig\";\n// import firebase from \"firebase/app\";\n\n\n\n\n// const store = createStore(\n//   rootReducer,\n//   compose(\n//     applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n//     reduxFirestore(firebase,fbConfig)\n//   )\n// );\n\n\n// const rrfProps = {\n//   firebase,\n//   config: fbConfig,\n//   dispatch: store.dispatch,\n//   createFirestoreInstance\n// };\n\n// ReactDOM.render(\n//   <Provider store={store}>\n//     <ReactReduxFirebaseProvider{...rrfProps}>\n//       <React.StrictMode>\n//         <App />\n//       </React.StrictMode>\n//     </ReactReduxFirebaseProvider>\n//   </Provider>\n//   ,\n//   document.getElementById('root')\n// );\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}